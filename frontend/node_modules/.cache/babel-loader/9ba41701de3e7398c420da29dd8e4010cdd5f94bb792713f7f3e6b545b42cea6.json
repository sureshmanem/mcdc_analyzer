{"ast":null,"code":"var _jsxFileName = \"/Users/lallu/Downloads/Repositories/Work/mcdc_usecase/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [conditions, setConditions] = useState('A,B,C');\n  const [expression, setExpression] = useState('A and B or C');\n  const [result, setResult] = useState(null);\n  const handleAnalyze = async () => {\n    const condList = conditions.split(',').map(c => c.trim());\n    const res = await fetch('http://localhost:8000/analyze', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        conditions: condList,\n        expression\n      })\n    });\n    const data = await res.json();\n    setResult(data.mcdc_cases);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 600,\n      margin: 'auto',\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MC/DC Scenario Analyzer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Conditions (comma separated): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: conditions,\n        onChange: e => setConditions(e.target.value),\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Boolean Expression: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: expression,\n        onChange: e => setExpression(e.target.value),\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: 20\n      },\n      onClick: handleAnalyze,\n      children: \"Analyze MC/DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"MC/DC Test Cases\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"5\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(result[0]).map(cond => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: cond\n            }, cond, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 69\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: result.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.values(row).map((val, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.toString()\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 73\n            }, this))\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"hykd5PJ0LIHXnUax4qnFoXkRL8k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","conditions","setConditions","expression","setExpression","result","setResult","handleAnalyze","condList","split","map","c","trim","res","fetch","method","headers","body","JSON","stringify","data","json","mcdc_cases","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","width","marginTop","onClick","border","cellPadding","Object","keys","cond","row","idx","values","val","i","toString","_c","$RefreshReg$"],"sources":["/Users/lallu/Downloads/Repositories/Work/mcdc_usecase/frontend/src/App.js"],"sourcesContent":["\nimport React, { useState } from 'react';\n\nfunction App() {\n    const [conditions, setConditions] = useState('A,B,C');\n    const [expression, setExpression] = useState('A and B or C');\n    const [result, setResult] = useState(null);\n\n    const handleAnalyze = async () => {\n        const condList = conditions.split(',').map(c => c.trim());\n        const res = await fetch('http://localhost:8000/analyze', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ conditions: condList, expression })\n        });\n        const data = await res.json();\n        setResult(data.mcdc_cases);\n    };\n\n    return (\n        <div style={{ maxWidth: 600, margin: 'auto', padding: 20 }}>\n            <h1>MC/DC Scenario Analyzer</h1>\n            <div>\n                <label>Conditions (comma separated): </label>\n                <input value={conditions} onChange={e => setConditions(e.target.value)} style={{ width: '100%' }} />\n            </div>\n            <div style={{ marginTop: 10 }}>\n                <label>Boolean Expression: </label>\n                <input value={expression} onChange={e => setExpression(e.target.value)} style={{ width: '100%' }} />\n            </div>\n            <button style={{ marginTop: 20 }} onClick={handleAnalyze}>Analyze MC/DC</button>\n            {result && (\n                <div style={{ marginTop: 30 }}>\n                    <h2>MC/DC Test Cases</h2>\n                    <table border=\"1\" cellPadding=\"5\">\n                        <thead>\n                            <tr>\n                                {Object.keys(result[0]).map(cond => <th key={cond}>{cond}</th>)}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {result.map((row, idx) => (\n                                <tr key={idx}>\n                                    {Object.values(row).map((val, i) => <td key={i}>{val.toString()}</td>)}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}